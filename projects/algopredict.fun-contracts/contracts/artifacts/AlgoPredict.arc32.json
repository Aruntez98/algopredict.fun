{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "addPrediction(string,string,string,uint64,uint64,string,string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "buyShares(uint64,uint8,uint64,pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "endPrediction(uint64,uint8)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimReward(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "predictionIndex": {
          "type": "uint64",
          "key": "predictionIndex"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "AlgoPredict",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "addPrediction",
        "args": [
          {
            "name": "question",
            "type": "string"
          },
          {
            "name": "option1Name",
            "type": "string"
          },
          {
            "name": "option2Name",
            "type": "string"
          },
          {
            "name": "startsAt",
            "type": "uint64"
          },
          {
            "name": "endsAt",
            "type": "uint64"
          },
          {
            "name": "category",
            "type": "string"
          },
          {
            "name": "image",
            "type": "string"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "buyShares",
        "args": [
          {
            "name": "predictionId",
            "type": "uint64"
          },
          {
            "name": "option",
            "type": "uint8"
          },
          {
            "name": "amount",
            "type": "uint64"
          },
          {
            "name": "payTxn",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "endPrediction",
        "args": [
          {
            "name": "predictionId",
            "type": "uint64"
          },
          {
            "name": "result",
            "type": "uint8"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claimReward",
        "args": [
          {
            "name": "predictionId",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}